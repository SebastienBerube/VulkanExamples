#version 450

layout(push_constant) uniform PushConstants {
    float DeltaTime;
} pc;

layout (local_size_x = 16, local_size_y = 16) in;

// U (velocity field)
layout (binding = 0, rg32f) uniform readonly image2D U_in;
layout (binding = 0) uniform sampler2D U_in_sampler;
layout (binding = 1, rg32f) uniform image2D W_out;

vec2 hash22(vec2 p)
{
    vec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));
    p3 += dot(p3, p3.yzx+33.33);
    return fract((p3.xx+p3.yz)*p3.zy);
}

void main()
{
    ivec2 tid = ivec2(gl_GlobalInvocationID.xy);
    
    uvec2 dim = imageSize(W_out);
    
    vec2 uv = (tid.xy + 0.5) / dim;
    vec2 duv = imageLoad(U_in, tid).rg * vec2(float(dim.y) / dim.x, 1) * 0.1;

    vec2 value_out = texture(U_in_sampler, uv - duv, 0.0).rg;
    imageStore(W_out, tid, vec4(value_out,0,0));
}